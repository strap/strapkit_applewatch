#! /bin/bash

 # /*
 #  Copyright 2015 Strap, LLC
 #  Portions derived from original source created by Apache Software Foundation.

 #    Licensed under the Apache License, Version 2.0 (the "License");
 #    you may not use this file except in compliance with the License.
 #    You may obtain a copy of the License at

 #        http://www.apache.org/licenses/LICENSE-2.0

 #    Unless required by applicable law or agreed to in writing, software
 #    distributed under the License is distributed on an "AS IS" BASIS,
 #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 #    See the License for the specific language governing permissions and
 #    limitations under the License.
 # */

#
# create a StrapKit/Apple-Watch project
#
# USAGE
#   ./create <path_to_new_project> <package_name> <project_name>
#
# EXAMPLE
#  ./create ~/Desktop/awesomesauce com.straphq.awesomesauce AwesomeSauce
#
set -e

#
# usage
# Output usage information and exit
#
function usage (){
  echo "Usage:"
  echo "    $0 --nometrics <path_to_new_project> <package_name> <project_name> [<project_template_dir>]"
  echo "    $0 --nometrics (optional): Do not include StrapMetrics"
  echo "    $0 <path_to_new_project>: Path to your new StrapKit Apple-Watch project"
  echo "    $0 <package_name>: Package name, following reverse-domain style convention"
  echo "    $0 <project_name>: Project name"
  echo "    $0 <project_template_dir>: Path to project template (override)."
  exit 1
}

#
# replace_package
# Replaces all occurences of default package name with desired package name
#
# @param target_file
#
function replace_package (){
    sed -e "$(PRODUCT_NAME)" "$1" > /tmp/out
    cat /tmp/out >  "$1"
    rm /tmp/out
}

#
# replace_name
# Replaces all occurences of default app name with desired app name
#
# @param target_file
#
function replace_name (){
    sed -e "s@MySampleApp@$PROJECT_NAME@g" "$1" > /tmp/out
    cat /tmp/out >  "$1"
    rm /tmp/out
}

INCLUDE_METRICS=1
while [ $# -gt 0 ]; do
    case "$1" in
    --nometrics) INCLUDE_METRICS=0 ;;
    -*) echo "Unrecognized argument: $1" >&2; usage ;;
    *)
        if [[ -z "$PROJECT_PATH" ]]; then
            PROJECT_PATH="$1"
        elif [[ -z "$PACKAGE" ]]; then
            PACKAGE="$1"
        elif [[ -z "$PROJECT_NAME" ]]; then
            PROJECT_NAME="$1"
        elif [[ -z "$PROJECT_TEMPLATE_DIR" ]]; then
            PROJECT_TEMPLATE_DIR="$1"
        else
            echo "Too many arguments to $0". >&2
            usage
        fi
    esac
    shift
done

# Say what's up
echo
echo "Adding apple-watch"
echo "path: $PROJECT_PATH"
echo "package: $PACKAGE"
echo "name: $PROJECT_NAME"

# check whether it is a proper create command (at least 3 arguments)
if [[ -z "$PROJECT_NAME" ]]; then
   usage
fi

# the two lines below are to get the current folder, and resolve symlinks
SCRIPT="$0"
# need this for relative symlinks
while [ -h "$SCRIPT" ] ; do
   SCRIPT=`readlink "$SCRIPT"`
done

# Capture location of script
BINDIR=$( cd "$( dirname "$SCRIPT" )" && pwd )
PROJECT_PARENT=$(dirname "$PROJECT_PATH")
PROJECT_TEMPLATE_DIR=${PROJECT_TEMPLATE_DIR:-"$BINDIR/templates/framework"}
SCRIPT_TEMPLATE_DIR=$BINDIR/templates/scripts
PACKAGE_DIR=$(echo $PACKAGE | sed 's/\./\//g' )

# check whether the project path exists and is not empty
if [ -d "$PROJECT_PATH" ]; then
   if [ "$(ls -1A "$PROJECT_PATH")" ]; then
      echo "\033[31mError: $PROJECT_PATH is not empty. Please specify an empty folder.\033[m"
      	   exit 1
	   fi
fi

# Ensure the parent directory exists so cp -r will not fail
if [ ! -d "$PROJECT_PARENT" ]; then
   echo "\033[31mError: $PROJECT_PARENT does not exist. Please specify an existing parent folder.\033[m"
   exit 1
fi

# Setup project path
mkdir -p "$PROJECT_PATH"
R=$PROJECT_PATH/$PROJECT_NAME

# Copy strapkit scripts
cp -r "$SCRIPT_TEMPLATE_DIR"/* "$PROJECT_PATH/"

# Create project directory
mkdir $R

# Copy non-edited directories
cp -r $PROJECT_TEMPLATE_DIR/{com.straphq.*} "$R/."

# Adjust product name in main project
replace_package "$R/com.straphq.teststrapkit/Info.plist"

# Adjust product name in watch project
replace_name "$R/com.straphq.teststrapkit\ WatchKit\ App/Info.plist"

# Setup Mobile directories
# mkdir -p "$R/mobile"
# cp -r $PROJECT_TEMPLATE_DIR/mobile/{libs,.gitignore,build.gradle,mobile.iml} "$R/mobile/."
# mkdir -p "$R/mobile/src/main"
# cp -r $PROJECT_TEMPLATE_DIR/mobile/src/main/{assets,res,AndroidManifest.xml} "$R/mobile/src/main/."
# mkdir -p "$R/mobile/src/main/$PACKAGE_DIR"
# cp -r $PROJECT_TEMPLATE_DIR/mobile/src/main/java/com/straphq/teststrapkit/mysampleapp/* "$R/mobile/src/main/$PACKAGE_DIR"

# # Adjust package names in mobile module
# replace_package "$R/mobile/src/main/AndroidManifest.xml"
# replace_package "$R/mobile/build.gradle"
# replace_package "$R/mobile/src/main/$PACKAGE_DIR/BaseActivity.java"

# Adjust app name in wear module
# replace_name "$R/mobile/src/main/res/values/strings.xml"

echo
echo "Done!"
